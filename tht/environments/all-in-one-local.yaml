# Undercloud TLS all-in-one to deploy openshift on top
# FIXME: Octavia relies on Mistral and can not be deployed
# w/o hacks. Add octavia services for a second deploy run
# so self-hosted Mistral will handle new role scale out

# NOTE: resource_registry comes with parametrized tht path from
# quickstart's undercloud_resource_registry_args

parameter_defaults:
  UndercloudServicesDefault:
    - OS::TripleO::Services::CACerts
    - OS::TripleO::Services::ContainersLogrotateCrond
    - OS::TripleO::Services::Docker
    - OS::TripleO::Services::GlanceApi
    - OS::TripleO::Services::HeatApi
    - OS::TripleO::Services::HeatApiCfn
    - OS::TripleO::Services::HeatEngine
    - OS::TripleO::Services::Iscsid
    - OS::TripleO::Services::Kernel
    - OS::TripleO::Services::Keystone
    - OS::TripleO::Services::Memcached
    - OS::TripleO::Services::MySQL
    - OS::TripleO::Services::NeutronCorePlugin
    - OS::TripleO::Services::NeutronDhcpAgent
    - OS::TripleO::Services::NeutronL3Agent
    - OS::TripleO::Services::NeutronMetadataAgent
    - OS::TripleO::Services::NeutronOvsAgent
    - OS::TripleO::Services::NeutronServer
    - OS::TripleO::Services::NovaApi
    - OS::TripleO::Services::NovaCompute
    - OS::TripleO::Services::NovaConductor
    - OS::TripleO::Services::NovaLibvirt
    - OS::TripleO::Services::NovaMetadata
    - OS::TripleO::Services::NovaPlacement
    - OS::TripleO::Services::NovaScheduler
    - OS::TripleO::Services::Ntp
    - OS::TripleO::Services::RabbitMQ
    - OS::TripleO::Services::SwiftProxy
    - OS::TripleO::Services::SwiftRingBuilder
    - OS::TripleO::Services::SwiftStorage
    - OS::TripleO::Services::Timezone
    - OS::TripleO::Services::TripleoFirewall
    - OS::TripleO::Services::TripleoPackages
    - OS::TripleO::Services::UndercloudCinderApi
    - OS::TripleO::Services::UndercloudCinderScheduler
    - OS::TripleO::Services::UndercloudCinderVolume
    - OS::TripleO::Services::UndercloudHAproxy
    - OS::TripleO::Services::UndercloudKeepalived
    # Should only be re-enabled on a 2nd deploy run
    #- OS::TripleO::Services::OctaviaApi
    #- OS::TripleO::Services::OctaviaDeploymentConfig
    #- OS::TripleO::Services::OctaviaHealthManager
    #- OS::TripleO::Services::OctaviaHousekeeping
    #- OS::TripleO::Services::OctaviaWorker
  KernelIpForward: 1
  KeystoneCorsAllowedOrigin: '*'
  TokenExpiration: 14400
  HeatConvergenceEngine: true
  Debug: false
  DockerDebug: false
  DockerPuppetDebug: false
  GlanceBackend: 'swift'
  NotificationDriver: 'noop'
  SwiftCeilometerPipelineEnabled: false
  EnablePackageInstall: true
  StackAction: CREATE
  SoftwareConfigTransport: POLL_SERVER_HEAT
  NeutronTunnelTypes: []
  NeutronFlatNetworks: '*'
  NeutronDnsDomain: 'openshift.cluster.lc'
  NovaSchedulerAvailableFilters: 'tripleo_common.filters.list.tripleo_filters'
  NovaSchedulerDefaultFilters: ['RetryFilter', 'TripleOCapabilitiesFilter', 'ComputeCapabilitiesFilter', 'AvailabilityZoneFilter', 'RamFilter', 'DiskFilter', 'ComputeFilter', 'ImagePropertiesFilter', 'ServerGroupAntiAffinityFilter', 'ServerGroupAffinityFilter']
  NovaSchedulerMaxAttempts: 30
  NovaAutoDisabling: '0'
  NeutronDhcpAgentsPerNetwork: 2
  HeatConvergenceEngine: false
  HeatCorsAllowedOrigin: '*'
  HeatMaxResourcesPerStack: -1
  HeatMaxJsonBodySize: 2097152
  MistralExecutionFieldSizeLimit: 16384
  MistralCorsAllowedOrigin: '*'
  MistralExecutionFieldSizeLimit: 16384
  NeutronExternalNetworkBridge: "''"
  NeutronBridgeMappings: 'floating:br-ex,ctlplane:br-ctlplane'
  NeutronServicePlugins: 'router,qos,trunk,segments'
  NeutronPluginExtensions: 'qos,port_security,dns,dns_domain_ports'
  NeutronAgentExtensions: 'qos'
  NeutronNetworkVLANRanges: 'physnet1:1000:2999'
  NeutronPluginExtensions: 'port_security'
  NeutronFirewallDriver: ''
  NeutronNetworkType: ['local','flat','vlan','gre','vxlan']
  NeutronTunnelIdRanges: '20:100'
  NeutronTypeDrivers: ['local','flat','vlan','gre','vxlan']
  NeutronVniRanges: '10:100'
  NeutronPortQuota: '-1'
  MigrateLegacyNeutronDb: true
  SwiftCorsAllowedOrigin: '*'
  # NOTE: the network config params come parametrized via quickstart's
  # undercloud_network_environment_args
