# Undercloud public TLS all-in-one BM(maybe) and VM-libvirt scenario to host openshift VMs.
# Must be applied top-scope via -e@.
# Based on fs027
# NOTE: internal TLS requires some config/general_config/deprecated/ipa.yml oooq vars and
# novajoin added in tht/role files.
# Assumes eth0 is libvirt brext or phys ext-net. And eth1 is internal ctlplane (phys/brovc)
undercloud_vcpu: 6
undercloud_memory: 20480
enable_opstools_repo: false
deployed_server: false
deploy_multinode: false
extra_tht_configs: /tmp/scripts/tht
configure_repos: true
enable_vbmc: false
undercloud_enable_ui: false
enable_libvirt_tripleo_ui: false
release: master
dlrn_hash_tag: current
undercloud_undercloud_debug: false
undercloud_cloud_domain: localdomain
undercloud_enable_ironic: false
undercloud_enable_ironic_inspector: false
undercloud_enable_telemetry: false
undercloud_enable_zaqar: true
undercloud_enable_mistral: true
undercloud_install_cli_options: " --use-heat"
# NOTE: not used yet, only needed for internal TLS (undercloud_custom_env_files)
# {{overcloud_templates_path}}/environments/services/novajoin.yaml,
# FIXME hack in self-hosted Mistral for octavia:
# that env file should only be added to undercloud_custom_env_files on a 2nd deploy run!
# {{overcloud_templates_path}}/environments/services/octavia.yaml
undercloud_custom_env_files: >-
 {{overcloud_templates_path}}/environments/services/undercloud-cinder.yaml,
 {{overcloud_templates_path}}/environments/disable-telemetry.yaml,
 {{working_dir}}/undercloud-parameter-defaults.yaml
# FIXME only needed for prep containers script, w/o undercloud_custom_env_files
# supported in it yet
# NOTE: not used yet, only needed for internal TLS
# -e {{overcloud_templates_path}}/environments/services/novajoin.yaml
undercloud_extra_services_args: >-
    -e {{overcloud_templates_path}}/environments/services/undercloud-cinder.yaml
    -e {{overcloud_templates_path}}/environments/docker.yaml
undercloud_install_script: undercloud-install.sh.j2
undercloud_docker_registry_host: docker.io
undercloud_docker_registry_namespace: tripleomaster
# FIXME There is no current tag available?
undercloud_docker_image_tag: current-tripleo
network_isolation: false
enable_pacemaker: false
overcloud_ipv6: false
containerized_overcloud: false
containerized_undercloud: true
undercloud_undercloud_hostname: "undercloud.{{ undercloud_cloud_domain }}"
step_install_undercloud: true
step_overcloud_image: false
step_glance_upload: false
step_register: false
step_root_device_size: false
step_root_device_hints: false
step_introspect: false
undercloud_generate_service_certificate: true
ssl_overcloud: false
# NOTE: those need to be enabled for internal TLS
prepare_novajoin: false
enable_tls_everywhere: false
undercloud_enable_novajoin: false
test_ping: false
run_tempest: false
enable_port_forward_for_tripleo_ui: false
delete_docker_cache: true
undercloud_rpm_dependencies: "python-tripleoclient*"
# FIXME: It should define non-isolated networks as:
# eth0 - for br-ex and public VIP and tenants' FIPs,
# eth1 - for br-ctlplane and admin VIP
undercloud_network_cidr: 192.168.25.0/24
undercloud_local_interface: eth1
undercloud_network_gateway: "{{ undercloud_network_cidr|nthhost(1) }}"
undercloud_local_ip: "{{ undercloud_network_cidr|nthhost(53) }}/{{ undercloud_network_cidr|ipaddr('prefix') }}"
local_docker_registry_host: "{{ undercloud_network_cidr|nthhost(53) }}"
undercloud_external_network_cidr: 192.168.23.0/24
undercloud_external_network_gateway: "{{ undercloud_external_network_cidr|nthhost(1) }}"
# Assumes the external dhcp range ends on .50
undercloud_undercloud_public_host: "{{ undercloud_external_network_cidr|nthhost(51) }}"
undercloud_undercloud_admin_host: "{{ undercloud_network_cidr|nthhost(52) }}"
# Not really used here as all-in-one does not include Ironic (for now)
undercloud_inspection_iprange: "{{ undercloud_external_network_cidr|nthhost(70) }},{{ undercloud_external_network_cidr|nthhost(79) }}"
undercloud_dhcp_start: "{{ undercloud_network_cidr|nthhost(60) }}"
undercloud_dhcp_end: "{{ undercloud_network_cidr|nthhost(69) }}"
undercloud_undercloud_nameservers:
  - 208.67.222.220
# FIXME: Not sure with these values below...
undercloud_masquerade_network: "{{ undercloud_network_cidr }}"
undercloud_resource_registry_args:
  "OS::TripleO::Undercloud::Net::SoftwareConfig": "{{ overcloud_templates_path }}/net-config-bridge.yaml"
  "OS::TripleO::Network::Ports::RedisVipPort": "{{ overcloud_templates_path }}/network/ports/noop.yaml"
  "OS::TripleO::Network::Ports::ControlPlaneVipPort": "{{ overcloud_templates_path }}/deployed-server/deployed-neutron-port.yaml"
  "OS::TripleO::NodeExtraConfigPost": "{{ overcloud_templates_path }}/extraconfig/post_deploy/undercloud_post.yaml"
  "OS::TripleO::Services::DockerRegistry": "{{ overcloud_templates_path }}/puppet/services/docker-registry.yaml"
  "OS::TripleO::Network::Ports::ExternalVipPort": "{{ overcloud_templates_path }}/network/ports/external_from_pool.yaml"
undercloud_network_environment_args:
  ControlFixedIPs: [{'ip_address':"{{undercloud_undercloud_admin_host}}"}]
  ControlPlaneDefaultRoute: "{{ undercloud_network_gateway }}"
  ControlPlaneSubnetCidr: "{{ undercloud_network_cidr|ipaddr('prefix') }}"
  ExternalAllocationPools: >
    [{'start': '{{ undercloud_external_network_cidr|nthhost(128) }}',
    'end': '{{ undercloud_external_network_cidr|nthhost(150) }}'}]
  ExternalInterfaceDefaultRoute: "{{ undercloud_external_network_gateway }}"
  ExternalNetCidr: "{{ undercloud_external_network_cidr|ipaddr('prefix') }}"
  PublicVirtualFixedIPs: [{'ip_address':"{{undercloud_undercloud_public_host}}" }]
  TenantAllocationPools: >
    [{'start': '{{ undercloud_external_network_cidr|nthhost(80) }}',
    'end': '{{ undercloud_external_network_cidr|nthhost(99) }}'}]
  TenantNetCidr: "{{ undercloud_external_network_cidr|ipaddr('prefix') }}"
  EC2MetadataIp: "{{ undercloud_network_cidr|nthhost(53) }}"
  DnsServers: "{{ undercloud_undercloud_nameservers }}"
  ## This only works with net-config-undercloud.yaml
  #ControlPlaneStaticRoutes:
  #  - ip_netmask: 169.254.169.254/32
  #    next_hop: "{{ undercloud_network_gateway }}"
  #  - ip_netmask: "{{ undercloud_network_cidr }}"
  #    next_hop: "{{ undercloud_network_gateway }}"
  #  - ip_netmask: "{{ undercloud_external_network_cidr }}"
  #    next_hop: "{{ undercloud_external_network_gateway }}"
  #  - ip_netmask: 0.0.0.0/0
  #    next_hop: "{{ undercloud_external_network_gateway }}"
  UndercloudCtlplaneSubnets:
    ctlplane-subnet:
      NetworkCidr: "{{ undercloud_network_cidr }}"
      NetworkGateway: "{{ undercloud_network_gateway }}"
      DhcpRangeStart: "{{ undercloud_network_cidr|nthhost(100) }}"
      DhcpRangeEnd: "{{ undercloud_network_cidr|nthhost(109) }}"
  UndercloudCtlplaneLocalSubnet: 'ctlplane-subnet'
  # It should match the undercloud_local_interface value
  Debug: false
  DockerDebug: false
  DockerPuppetDebug: false
  EnablePackageInstall: true
  GlanceBackend: 'swift'
  HeatConvergenceEngine: true
  HeatCorsAllowedOrigin: '*'
  HeatMaxJsonBodySize: 2097152
  HeatMaxResourcesPerStack: -1
  HypervisorNeutronPublicInterface: eth0
  KernelIpForward: 1
  KeystoneCorsAllowedOrigin: '*'
  MigrateLegacyNeutronDb: true
  MistralCorsAllowedOrigin: '*'
  MistralExecutionFieldSizeLimit: 16384
  MistralExecutionFieldSizeLimit: 16384
  NeutronAgentExtensions: 'qos'
  NeutronBridgeMappings: 'floating:br-ex,ctlplane:br-ctlplane'
  NeutronDhcpAgentsPerNetwork: 2
  # NOTE: this comes from undercloud.conf's overcloud_domain_name but is used
  # as --local-domain for undercloud, so prolly should be a 'localdomain'?
  NeutronDnsDomain: 'localdomain'
  NeutronExternalNetworkBridge: "''"
  NeutronFirewallDriver: ''
  NeutronFlatNetworks: '*'
  NeutronNetworkType: ['local','flat','vlan','gre','vxlan']
  NeutronNetworkVLANRanges: 'physnet1:1000:2999'
  NeutronPluginExtensions: 'port_security'
  NeutronPluginExtensions: 'qos,port_security,dns,dns_domain_ports'
  NeutronPortQuota: '-1'
  NeutronPublicInterface: eth0
  NeutronServicePlugins: 'router,qos,trunk,segments'
  NeutronTunnelIdRanges: '20:100'
  NeutronTunnelTypes: []
  NeutronTypeDrivers: ['local','flat','vlan','gre','vxlan']
  NeutronVniRanges: '10:100'
  NotificationDriver: 'noop'
  NovaAutoDisabling: '0'
  NovaSchedulerAvailableFilters: 'tripleo_common.filters.list.tripleo_filters'
  NovaSchedulerDefaultFilters: ['RetryFilter', 'TripleOCapabilitiesFilter', 'ComputeCapabilitiesFilter', 'AvailabilityZoneFilter', 'RamFilter', 'DiskFilter', 'ComputeFilter', 'ImagePropertiesFilter', 'ServerGroupAntiAffinityFilter', 'ServerGroupAffinityFilter']
  NovaSchedulerMaxAttempts: 30
  SoftwareConfigTransport: POLL_SERVER_HEAT
  StackAction: CREATE
  SwiftCeilometerPipelineEnabled: false
  SwiftCorsAllowedOrigin: '*'
  TokenExpiration: 14400
