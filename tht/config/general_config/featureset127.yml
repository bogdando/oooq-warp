# Undercloud public TLS all-in-one BM(maybe) and VM-libvirt scenario to host openshift VMs.
# Must be applied top-scope via -e@.
# Based on fs027 quickstart for containerized openstack undercloud deploy --use-heat
# NOTE: internal TLS will require some config/general_config/deprecated/ipa.yml oooq vars set
# and novajoin added in tht/role files.
# For libvirt, it configures eth0 as libvirt brext, and eth1 as brovc (ctlplane)
networks:
  - name: external
    bridge: brext
    forward_mode: nat
    address: "{{ undercloud_external_network_cidr|nthhost(1) }}"
    netmask: "{{ undercloud_external_network_cidr|ipaddr('netmask') }}"
    dhcp_range:
      - "{{ undercloud_external_network_cidr|nthhost(10) }}"
      - "{{ undercloud_external_network_cidr|nthhost(50) }}"
    nat_port_range:
      - 1024
      - 65535
  - name: overcloud
    bridge: brovc
public_int: eth0
local_int: eth1
undercloud_vcpu: 6
undercloud_memory: 20480
enable_opstools_repo: false
deployed_server: false
deploy_multinode: false
extra_tht_configs: /tmp/scripts/tht
configure_repos: true
enable_vbmc: false
undercloud_enable_ui: false
enable_libvirt_tripleo_ui: false
release: master
dlrn_hash_tag: current
undercloud_undercloud_debug: false
undercloud_cloud_domain: localdomain
undercloud_enable_ironic: false
undercloud_enable_ironic_inspector: false
undercloud_enable_telemetry: false
undercloud_enable_zaqar: true
undercloud_enable_mistral: true
undercloud_install_cli_options: " --use-heat"
undercloud_undercloud_output_dir: /home/stack
# needs https://review.openstack.org/#/c/563636/
undercloud_custom_env_files: >-
 {{overcloud_templates_path}}/environments/services/undercloud-cinder.yaml
 {{overcloud_templates_path}}/environments/disable-telemetry.yaml
 {{working_dir}}/undercloud-parameter-defaults.yaml
# NOTE: not used yet, only needed for internal TLS
# {{overcloud_templates_path}}/environments/services/novajoin.yaml
# FIXME hack in self-hosted Mistral for octavia:
# that env file should only be added to undercloud_custom_env_files on a 2nd deploy run!
# {{overcloud_templates_path}}/environments/services/octavia.yaml
undercloud_install_script: undercloud-install.sh.j2
undercloud_docker_registry_host: docker.io
undercloud_docker_registry_namespace: tripleomaster
# FIXME: is the current tag available yet for container images?
undercloud_docker_image_tag: current-tripleo
network_isolation: false
enable_pacemaker: false
overcloud_ipv6: false
containerized_overcloud: false
containerized_undercloud: true
undercloud_undercloud_hostname: "undercloud.{{ undercloud_cloud_domain }}"
step_install_undercloud: true
step_overcloud_image: false
step_glance_upload: false
step_register: false
step_root_device_size: false
step_root_device_hints: false
step_introspect: false
undercloud_generate_service_certificate: true
ssl_overcloud: false
# NOTE: those 3 need to be enabled for internal TLS
prepare_novajoin: false
enable_tls_everywhere: false
undercloud_enable_novajoin: false
# seems ignored, run this manually post deploy!
test_ping: true
run_tempest: false
enable_port_forward_for_tripleo_ui: false
delete_docker_cache: true
undercloud_rpm_dependencies: "python-tripleoclient*"
# FIXME: It should define non-isolated networks as:
# eth0 - for br-ex and public VIP and tenants' FIPs,
# eth1 - for br-ctlplane and admin VIP and local_ip
# internal_api is replaced by ctlplane
undercloud_network_cidr: 192.168.25.0/24
undercloud_local_interface: "{{ local_int }}"
undercloud_network_gateway: "{{ undercloud_network_cidr|nthhost(1) }}"
undercloud_local_ip: "{{ undercloud_network_cidr|nthhost(253) }}/{{ undercloud_network_cidr|ipaddr('prefix') }}"
local_docker_registry_host: "{{ undercloud_network_cidr|nthhost(253) }}"
undercloud_external_network_cidr: 192.168.23.0/24
undercloud_external_network_gateway: "{{ undercloud_external_network_cidr|nthhost(1) }}"
undercloud_undercloud_public_host: "{{ undercloud_external_network_cidr|nthhost(251) }}"
undercloud_undercloud_admin_host: "{{ undercloud_network_cidr|nthhost(252) }}"
# Not really used here as all-in-one does not include Ironic (for now)
undercloud_inspection_iprange: "{{ undercloud_external_network_cidr|nthhost(70) }},{{ undercloud_external_network_cidr|nthhost(79) }}"
undercloud_dhcp_start: "{{ undercloud_network_cidr|nthhost(60) }}"
undercloud_dhcp_end: "{{ undercloud_network_cidr|nthhost(69) }}"
undercloud_undercloud_nameservers:
  - 208.67.222.220
# FIXME: should it be undercloud_external_network_cidr? (seems not used anyway)
undercloud_masquerade_network: "{{ undercloud_network_cidr }}"
# TODO: rework tht Undercloud* as Standalone* for AIO deployments
undercloud_resource_registry_args:
  "OS::TripleO::Undercloud::Net::SoftwareConfig": "{{ overcloud_templates_path }}/net-config-undercloud.yaml"
  # needs https://review.openstack.org/#/c/565233/
  "OS::TripleO::Network::Ports::ExternalVipPort": "{{ undercloud_undercloud_output_dir }}/tripleo-heat-installer-templates/network/ports/external_from_pool.yaml"
  # ^-- Uses UndercloudIPs parameter
  "OS::TripleO::Network::Ports::ControlPlaneVipPort": "{{ overcloud_templates_path }}/deployed-server/deployed-neutron-port.yaml"
  "OS::TripleO::Network::Ports::RedisVipPort": "{{ overcloud_templates_path }}/network/ports/noop.yaml"
# TODO: rework UndercloudNetConfigOverride via net_config_override, see https://review.openstack.org/#/c/563636/
undercloud_network_environment_args:
  PublicVirtualInterface: 'br-ex'
  ControlVirtualInterface: 'br-ctlplane'
  UndercloudNetConfigOverride:
    network_config:
      - type: ovs_bridge
        name: br-ex
        ovs_extra: [ "br-set-external-id br-ex bridge-id br-ex" ]
        members:
          - type: interface
            name: "{{public_int}}"
            primary: "true"
            # NOTE: use your values for MTU and external/libvirt DNS servers
            # mtu must be a hardcode to be properly to_json'ed as integers, see https://github.com/ansible/ansible/issues/17992
            mtu: 1450
            dns_servers: "{{ undercloud_undercloud_nameservers }}"
        addresses:
          # this one should be configured by keepalived
          #- ip_netmask: "{{ undercloud_undercloud_public_host }}/32"
          - ip_netmask: "{{ hostvars['undercloud'].undercloud_external_ip }}/{{ undercloud_external_network_cidr|ipaddr('prefix') }}"
        routes:
          - ip_netmask: "{{ undercloud_external_network_cidr }}"
            next_hop: "{{ undercloud_external_network_gateway }}"
          - ip_netmask: "169.254.169.254/32"
            next_hop: "{{ undercloud_external_network_gateway }}"
          - ip_netmask: "0.0.0.0/0"
            next_hop: "{{ undercloud_external_network_gateway }}"
        mtu: 1450
      - type: ovs_bridge
        name: br-ctlplane
        ovs_extra: [ "br-set-external-id br-ctlplane bridge-id br-ctlplane" ]
        members:
          - type: interface
            name: "{{ local_int }}"
            primary: "true"
            mtu: 1450
            dns_servers: "{{ undercloud_undercloud_nameservers }}"
        addresses:
          # this one should be configured by keepalived
          #- ip_netmask: "{{ undercloud_undercloud_admin_host }}/32"
          - ip_netmask: "{{ hostvars['undercloud'].undercloud_ip }}"
        routes:
          - ip_netmask: 169.254.169.254/32
            next_hop: "{{ undercloud_network_gateway }}"
          - ip_netmask: "{{ undercloud_network_cidr }}"
            next_hop: "{{ undercloud_network_gateway }}"
        mtu: 1450
  UndercloudIPs:
    external:
      - "{{ undercloud_undercloud_public_host }}"
  # We only want ctlplane and External networks for simplicity, but let's
  # do overrides for future cases
  ServiceNetMap:
    CephClusterNetwork: ctlplane
    PacemakerRemoteNetwork: ctlplane
    ControlPlaneNetwork: ctlplane
    InternalApiNetwork: ctlplane
    StorageNetwork: ctlplane
    StorageMgmtNetwork: ctlplane
    ExternalNetwork: external
    TenantNetwork: external
    PublicNetwork: external
  # More data similar to environments/undercloud.yaml adapted for AIO
  EC2MetadataIp: "{{ undercloud_network_cidr|nthhost(253) }}"
  DnsServers: "{{ undercloud_undercloud_nameservers }}"
  UndercloudCtlplaneSubnets:
    ctlplane-subnet:
      NetworkCidr: "{{ undercloud_network_cidr }}"
      NetworkGateway: "{{ undercloud_network_gateway }}"
      DhcpRangeStart: "{{ undercloud_network_cidr|nthhost(100) }}"
      DhcpRangeEnd: "{{ undercloud_network_cidr|nthhost(109) }}"
  UndercloudCtlplaneLocalSubnet: 'ctlplane-subnet'
  UndercloudEnableRoutedNetworks: false
  Debug: false
  DockerDebug: false
  DockerPuppetDebug: false
  EnablePackageInstall: true
  GlanceBackend: 'swift'
  HeatConvergenceEngine: true
  HeatCorsAllowedOrigin: '*'
  HeatMaxJsonBodySize: 2097152
  HeatMaxResourcesPerStack: -1
  HypervisorNeutronPublicInterface: "{{ public_int }}"
  KernelIpForward: 1
  KeystoneCorsAllowedOrigin: '*'
  MigrateLegacyNeutronDb: true
  MistralCorsAllowedOrigin: '*'
  MistralExecutionFieldSizeLimit: 16384
  MistralExecutionFieldSizeLimit: 16384
  NeutronAgentExtensions: 'qos'
  NeutronBridgeMappings: 'floating:br-ex,ctlplane:br-ctlplane'
  NeutronDhcpAgentsPerNetwork: 2
  NeutronDnsDomain: 'localdomain'
  NeutronExternalNetworkBridge: "''"
  NeutronFirewallDriver: 'openvswitch'
  NeutronFlatNetworks: '*'
  NeutronNetworkType: ['local','flat','vlan','gre','vxlan']
  NeutronNetworkVLANRanges: 'ctlplane:1000:2999'
  NeutronPluginExtensions: 'port_security'
  NeutronPluginExtensions: 'qos,port_security,dns,dns_domain_ports'
  NeutronPortQuota: '-1'
  NeutronPublicInterface: "{{ public_int }}"
  # Use lbaasv2-proxy for octavia? (though buggy https://review.openstack.org/#/c/554004/)
  NeutronServicePlugins: 'router,qos,trunk,segments'
  NeutronTunnelIdRanges: '20:100'
  NeutronTunnelTypes: []
  NeutronTypeDrivers: ['local','flat','vlan','gre','vxlan']
  NeutronVniRanges: '10:100'
  NotificationDriver: 'noop'
  NovaAutoDisabling: '0'
  NovaSchedulerAvailableFilters: 'tripleo_common.filters.list.tripleo_filters'
  NovaSchedulerDefaultFilters: ['RetryFilter', 'TripleOCapabilitiesFilter', 'ComputeCapabilitiesFilter', 'AvailabilityZoneFilter', 'RamFilter', 'DiskFilter', 'ComputeFilter', 'ImagePropertiesFilter', 'ServerGroupAntiAffinityFilter', 'ServerGroupAffinityFilter']
  NovaSchedulerMaxAttempts: 30
  SoftwareConfigTransport: POLL_SERVER_HEAT
  SwiftCeilometerPipelineEnabled: false
  SwiftCorsAllowedOrigin: '*'
  TokenExpiration: 14400
