# reworked general multinode job configuration from oooq
deploy_multinode: true
step_overcloud_image: false
step_glance_upload: false
step_register: false
hypervisor_wait: false
deployed_server: true
enable_pacemaker: false
overcloud_ipv6: false
enable_swap: false
ssl_overcloud: false
tempest_config: false
run_tempest: false
test_ping: false
step_validate_overcloud: false
step_introspect: false
multinode_args: ""
use_resource_registry_nic_configs: true

# Drop docker-network.yaml from oooq container_args to not conflict
container_args: >-
  -e {{ overcloud_templates_path }}/environments/docker.yaml
  -e {{ working_dir }}/containers-default-parameters.yaml

# push overcloud images to UC serving a local registry
# NOTE: overcloud prep containers hardcodes a 8787 port
local_docker_registry_host: "{{ hostvars['undercloud'].undercloud_ip }}"
# pull overcloud images from the undercloud registry
additional_insecure_registry: true
docker_registry_host: "{{ local_docker_registry_host }}"
docker_image_tag: "{{ undercloud_docker_image_tag }}"
docker_registry_namespace: "{{ undercloud_docker_registry_namespace }}"

prepare_service_env_args: >-
  -e {{ overcloud_templates_path }}/environments/docker.yaml

node_count: 1
flavor_args: ''
# FIXME given a provisioned traas stack name was 'foo'.
overcloud_nodes:
  - name: foo-overcloud-controller-0

#  - name: foo-overcloud-compute-0

# Note, scale args are ignored for composable roles.
# Add a custom t-h-t env instead
extra_args: >
  --ntp-server pool.ntp.org
  --deployed-server
  -e {{ working_dir }}/network-environment.yaml
  -e {{ overcloud_templates_path }}/environments/deployed-server-bootstrap-environment-centos.yaml

# Composable deployed-server roles to override defaults in
# tht's deployed-server/deployed-server-roles-data.yaml
composable_roles: true
# ServicesDefault merges services from the overcloud_services
# TODO remaining deployed server roles supported
overcloud_roles:
  - name: ControllerDeployedServer
    HostnameFormatDefault: '%stackname%-controller-%index%'
    disable_constraints: True
    ServicesDefault: []
    CountDefault: 1
    tags:
      - primary
      - controller

# requires https://bugs.launchpad.net/tripleo/+bug/1733837 resolved
#    disable_upgrade_deployment: True

#  - name: ComputeDeployedServer
#    HostnameFormatDefault: '%stackname%-compute-%index%'
#    disable_upgrade_deployment: True
#    disable_constraints: True
#    CountDefault: 0
#    ServicesDefault: []

composable_services: true
overcloud_services:
  - name: 'ControllerDeployedServerServices:'
    services:
      - OS::TripleO::Services::Docker
      - OS::TripleO::Services::Kernel
      - OS::TripleO::Services::Keystone
      - OS::TripleO::Services::NovaApi
      - OS::TripleO::Services::RabbitMQ
      - OS::TripleO::Services::MySQL
      - OS::TripleO::Services::Memcached
      - OS::TripleO::Services::MySQLClient
      - OS::TripleO::Services::HAproxy
      - OS::TripleO::Services::Keepalived
      - OS::TripleO::Services::Ntp
      - OS::TripleO::Services::Timezone
      - OS::TripleO::Services::TripleoFirewall

# FIXME Doesn't work well for oooq, produces bad indentation
#  - name: 'ComputeDeployedServerServices:'
#    services:
#      - OS::TripleO::Services::NovaCompute
#      - OS::TripleO::Services::NovaLibvirt
#      - OS::TripleO::Services::ComputeNeutronOvsAgent
#      - OS::TripleO::Services::Docker

controller_hosts: "{{ lookup('env', 'CONTROLLER_HOSTS') }}"
first_controller_ip: "{{ controller_hosts.split(' ')[0] }}"
undercloud_ip: "{{ hostvars['undercloud'].undercloud_ip }}"

# Which nodes roles to ssh in and apply deployed-server magic
# TODO remaining deployed server roles supported
# BLOCKSTORAGE_HOSTS, OBJECTSTORAGE_HOSTS, CEPHSTORAGE_HOSTS
deployed_server_overcloud_roles:
  - name: ControllerDeployedServer
    hosts: "{{ controller_hosts }}"

#  - name: ComputeDeployedServer
#    hosts: "{{ lookup('env', 'COMPUTE_HOSTS')|default('') }}"
subnodes_ssh_key: "{{ lookup('env', 'SUBNODES_SSH_KEY') }}"

# TODO figure out a networking setup from multinode CI scenarios.
# Do not use host cloud floating IPs subnet for external-ish variables!
# see also undercloud_networks in oooq
network_isolation: false
# Enable these, when network_isolation is enabled
#step_adjust_mtu: true
#mtu: 1350
#mtu_interface:
#  - eth0

# Host cloud private tenant networks CIDR, provisioned with Traas
undercloud_network_cidr: 192.168.0.0/24
#undercloud_external_network_cidr: 192.168.253.0/24

# Private VMs' networks for overcloud contol traffic routing,
# based on the chosen network_isolation
undercloud_external_network_cidr: "{{ undercloud_network_cidr }}"
external_network_cidr: "{{ undercloud_external_network_cidr }}"

# Private tenant net defaults and RDO cloud specific DNS servers
overcloud_dns_servers:
  - "{{ undercloud_network_cidr|nthhost(2) }}"
  - 38.145.32.66
  - 38.145.32.79

# FIXME Hack: merge environments/custom.yaml parameter_defaults into a single template
network_environment_args:
  ExternalNetCidr: "{{ undercloud_external_network_cidr }}"
  ExternalAllocationPools: >
    [{'start': '{{ undercloud_external_network_cidr|nthhost(4) }}',
    'end': '{{ undercloud_external_network_cidr|nthhost(250) }}'}]
  NeutronExternalNetworkBridge: ""
  ControlPlaneSubnetCidr: "{{ undercloud_network_cidr|ipaddr('prefix') }}"
  ControlPlaneDefaultRoute: "{{ undercloud_network_cidr|nthhost(1) }}"
  EC2MetadataIp: "{{ undercloud_ip }}"
  DnsServers: "{{ overcloud_dns_servers }}"
  NeutronPublicInterface: eth1
  HypervisorNeutronPublicInterface: eth1
  HostnameMap:
    overcloud-controller-0: foo-overcloud-controller-0
  DeployedServerPortMap:
    foo-overcloud-controller-0-ctlplane:
      fixed_ips:
        - ip_address: "{{ first_controller_ip }}"
      subnets:
        - cidr: 24
  ControllerDeployedServerCount: 1
  ControllerDeployedServerExtraConfig:
    nova::compute::libvirt::services::libvirt_virt_type: qemu
    nova::compute::libvirt::libvirt_virt_type: qemu
    nova::compute::libvirt::libvirt_cpu_mode: 'none'
  DockerPuppetDebug: true
  DockerDebug: true

resource_registry_args:
  OS::TripleO::ControllerDeployedServer::Net::SoftwareConfig: "{{ overcloud_templates_path }}/net-config-static-bridge.yaml"
  OS::TripleO::ComputeDeployedServer::Net::SoftwareConfig: "{{ overcloud_templates_path }}/net-config-static.yaml"
  OS::TripleO::Server: "{{ overcloud_templates_path }}/deployed-server/deployed-server.yaml"
  OS::TripleO::DeployedServer::Bootstrap: OS::Heat::None
  # Pre-provisioned host cloud neutron ports
  OS::TripleO::DeployedServer::ControlPlanePort: "{{ overcloud_templates_path }}/deployed-server/deployed-neutron-port.yaml"

#  ControllerDeployedServerFlavor: foo
#  ExtraConfig: {}
#  ControlVirtualIP: <pre_provisioned_configufed_ip>
#  RedisVirtualIP: <pre_provisioned_configufed_ip2>

overcloud_user: centos
overcloud_key: /home/centos/.ssh/id_rsa
undercloud_user: centos
ssh_user: "{{ undercloud_user }}"
non_root_user: "{{ undercloud_user }}"
non_root_group: "{{ undercloud_user }}"
local_working_dir: /home/{{ undercloud_user }}
working_dir: /home/{{ undercloud_user }}
overcloud_cloud_domain: rdocloud
overcloud_cloud_name: overcloud.rdocloud
overcloud_cloud_name_internal: overcloud.internalapi.rdocloud
overcloud_cloud_name_storage:  overcloud.storage.rdocloud
overcloud_cloud_name_storage_management: overcloud.storagemanagement.rdocloud
overcloud_cloud_name_ctlplane: overcloud.ctlplane.rdocloud
