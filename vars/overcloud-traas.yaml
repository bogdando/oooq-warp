# reworked general multinode job configuration from oooq
deploy_multinode: true
step_overcloud_image: false
step_glance_upload: false
step_register: false
hypervisor_wait: false
deployed_server: true

node_cound: 1
flavor_args: ''
# FIXME given a provisioned traas stack name was 'foo'.
overcloud_nodes:
  - name: foo-overcloud-controller-0

#  - name: foo-overcloud-compute-0

# Note, scale args are ignored for composable roles.
# Add a custom t-h-t env instead, for example
# https://github.com/bogdando/tripleo-heat-templates/blob/dev/environments/custom.yaml:
extra_args: >
  {{ extra_args_common }}
  -e {{overcloud_templates_path}}/environments/custom.yaml
  -e {{ working_dir }}/network-environment.yaml
  -e {{ overcloud_templates_path }}/environments/deployed-server-bootstrap-environment-centos.yaml

# NOTE: this does not match the custom host names format, overriden in t-h-t custom.yaml instead
#  -e {{ overcloud_templates_path }}/environments/split-stack-consistent-hostname-format.yaml

# Composable deployed-server roles to override defaults in
# tht's deployed-server/deployed-server-roles-data.yaml
composable_roles: true
# ServicesDefault merges services from the overcloud_services
# TODO remaining deployed server roles supported
overcloud_roles:
  - name: ControllerDeployedServer
    HostnameFormatDefault: 'foo-%stackname%-controller-%index%'
    disable_constraints: True
    ServicesDefault: []
    CountDefault: 1
    tags:
      - primary
      - controller

#  - name: ComputeDeployedServer
#    HostnameFormatDefault: 'foo-%stackname%-compute-%index%'
#    disable_upgrade_deployment: True
#    disable_constraints: True
#    CountDefault: 0
#    ServicesDefault: []

composable_services: true
overcloud_services:
  - name: 'ControllerDeployedServerServices:'
    services:
      - OS::TripleO::Services::Docker
      - OS::TripleO::Services::Kernel
      - OS::TripleO::Services::Keystone
      - OS::TripleO::Services::NovaApi
      - OS::TripleO::Services::RabbitMQ
      - OS::TripleO::Services::MySQL
      - OS::TripleO::Services::Memcached
      - OS::TripleO::Services::MySQLClient
      - OS::TripleO::Services::HAproxy
      - OS::TripleO::Services::Keepalived
      - OS::TripleO::Services::Ntp
      - OS::TripleO::Services::Timezone
      - OS::TripleO::Services::TripleoFirewall

# FIXME Doesn't work well for oooq, produces bad indentation
#  - name: 'ComputeDeployedServerServices:'
#    services:
#      - OS::TripleO::Services::NovaCompute
#      - OS::TripleO::Services::NovaLibvirt
#      - OS::TripleO::Services::ComputeNeutronOvsAgent
#      - OS::TripleO::Services::Docker

# Which nodes roles to ssh in and apply deployed-server magic
# TODO remaining deployed server roles supported
# BLOCKSTORAGE_HOSTS, OBJECTSTORAGE_HOSTS, CEPHSTORAGE_HOSTS
deployed_server_overcloud_roles:
  - name: ControllerDeployedServer
    hosts: "{{ lookup('env', 'CONTROLLER_HOSTS') }}"

#  - name: ComputeDeployedServer
#    hosts: "{{ lookup('env', 'COMPUTE_HOSTS')|default('') }}"
subnodes_ssh_key: "{{ lookup('env', 'SUBNODES_SSH_KEY') }}"

# TODO figure out a networking setup from multinode CI scenarios.
# Do not use host cloud floating IPs subnet for external-ish variables!
# see also undercloud_networks in oooq
network_isolation: false
# Enable these, when network_isolation is enabled
#step_adjust_mtu: true
#mtu: 1350
#mtu_interface:
#  - eth0
#undercloud_external_network_cidr: 10.0.0.0/24

# Host cloud private tenant network CIDR, Traas hardcoded
undercloud_network_cidr: 192.168.0.0/24
ctl_plane_ip: "{{ hostvars['undercloud'].undercloud_ip }}"

# Private VMs' networks for overcloud contol traffic routing,
# based on the chosen network_isolation
undercloud_external_network_cidr: "{{ undercloud_network_cidr }}"
external_network_cidr: "{{ undercloud_external_network_cidr }}"

# Private tenant net defaults and RDO cloud specific DNS servers
overcloud_dns_servers:
  - "{{ undercloud_network_cidr|nthhost(2) }}"
  - 38.145.32.66
  - 38.145.32.79

network_environment_args:
  ExternalNetCidr: "{{ undercloud_external_network_cidr }}"
  ExternalAllocationPools: >
    [{'start': '{{ undercloud_external_network_cidr|nthhost(4) }}',
    'end': '{{ undercloud_external_network_cidr|nthhost(250) }}'}]
  NeutronExternalNetworkBridge: ""
  ControlPlaneSubnetCidr: "{{ undercloud_network_cidr|ipaddr('prefix') }}"
  ControlPlaneDefaultRoute: "{{ undercloud_network_cidr|nthhost(1) }}"
  EC2MetadataIp: "{{ ctl_plane_ip }}"
  DnsServers: "{{ overcloud_dns_servers }}"
  NeutronPublicInterface: eth1
  HypervisorNeutronPublicInterface: eth1

undercloud_user: centos
ssh_user: "{{ undercloud_user }}"
non_root_user: "{{ undercloud_user }}"
non_root_group: "{{ undercloud_user }}"
local_working_dir: /home/{{ undercloud_user }}
working_dir: /home/{{ undercloud_user }}
